{"version":3,"sources":["commom/baseURL.js","components/products/products.js","commom/home.js","App.js","serviceWorker.js","components/posts/posts.js","commom/footer.js","commom/inputField.js","components/cart/myCart.js","commom/drag_drop_image.js","components/products/createProduct.js","reducer.js","index.js","components/posts/createPost.js"],"names":["url","BASE_URL_S3","mapDispatchToProps","addItemToCart","data","dispatch","type","payload","connect","state","useState","products","setProducts","history","useHistory","matchRoute","useRouteMatch","addToCart","item","a","axios","method","JSON","stringify","productId","status","itemList","map","className","key","src","img","alt","name","description","price","onClick","useEffect","response","Items","getAllProducts","Button","push","path","variant","style","float","marginRight","Home","items","App","Boolean","window","location","hostname","match","tableStyles","makeStyles","theme","table","minWidth","root","margin","spacing","button","StyledTableCell","withStyles","head","backgroundColor","palette","common","white","color","black","body","fontSize","TableCell","Posts","posts","setPosts","classes","deletePost","post","params","postId","id","createdAt","console","log","get","getALlPosts","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","width","align","TableBody","title","userId","myStyles","flexGrow","menuButton","total","AppBar","position","Toolbar","IconButton","edge","Typography","to","textDecoration","InputField","props","field","label","placeholder","isDisable","value","onChange","onBlur","Form","Group","controlId","Label","Control","disabled","defaultProps","addedCarts","addedItems","count","Row","Col","xs","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","height","padding","boxSizing","thumbInner","overflow","baseStyle","flex","alignItems","borderWidth","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","Drag_Drop_Image","files","setFiles","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","useMemo","thumbs","forEach","revokeObjectURL","i","length","includes","CreateProduct","isRedirect","setIsRedirect","onSubmitForm","imgs","uploadInfo","uploadUrl","uploadURL","headers","back","Container","initialValues","onSubmit","values","formikProps","DragDropImage","initialState","reducer","action","addedItem","checkItem","find","x","appStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","exact","MyCart","from","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a8c6b09.chunk.js","sourcesContent":["const url = {\n    BASE_URL_S3: 'https://upload-images.s3-ap-northeast-1.amazonaws.com/'\n}\n\nexport default url;","import React, { useEffect, useState } from 'react'\nimport './Products.css';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport url from './../../commom/baseURL.js';\nfunction Products({ addItemToCart }) {\n    const [products, setProducts] = useState([]);\n    const history = useHistory();\n    const matchRoute = useRouteMatch();\n    const addToCart = async (item) => {\n        const response = await axios({\n            method: 'POST',\n            url: 'https://ukwsvt85ug.execute-api.ap-northeast-1.amazonaws.com/dev/Add_To_Cart',\n            data: JSON.stringify(item.productId)\n        });\n        if (response.status === 200) {\n            addItemToCart(item);\n        }\n    }\n    const goToCreateProduct = () => {\n        history.push(`${matchRoute.path}/create`);\n    }\n    const itemList = products.map(item => {\n        return (\n            <div className=\"card\" key={item.productId}>\n                <div className=\"card-image\">\n                    <img src={`${url.BASE_URL_S3}${item.img}`} alt={item.name} />\n                    <span className=\"card-name\">{item.name}</span>\n                </div>\n                <div className=\"card-content\">\n                    <p>{item.description}</p>\n                    <p><b>Price: {item.price}</b></p>\n                    <span onClick={() => addToCart(item)}>Add to cart<i className=\"fas fa-plus-circle add-to-cart\"></i></span>\n                </div>\n            </div>\n        )\n    });\n\n    useEffect(() => {\n        async function getAllProducts() {\n            const response = await axios({\n                method: 'GET',\n                url: 'https://ukwsvt85ug.execute-api.ap-northeast-1.amazonaws.com/dev/Get_All_Products'\n            });\n            const data = response.data.data;\n            setProducts(data.Items);\n        }\n        getAllProducts();\n    }, []);\n    return (\n        <div>\n            <div className=\"above\">\n                <h3>Our items</h3>\n                <Button className=\"above__button\" onClick={goToCreateProduct} variant=\"primary\" style={{ float: 'right', marginRight: 20 }}>Create new product</Button>\n            </div>\n            <div className=\"box\">\n                {itemList}\n            </div>\n        </div>\n    )\n}\n\nconst addItemToCart = (data) => {\n    return (dispatch) => {\n        dispatch({ type: 'ADD_TO_CART', payload: data })\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nconst mapDispatchToProps = { addItemToCart };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from 'react'\nimport './../App.css';\nimport Products from '../components/products/products.js';\n// import Row from './row.js';\n// import requests from './requests.js';\nfunction Home({ items }) {\n  return (\n    <div>\n      <div className=\"app\">\n        {/* <Banner /> */}\n        {/* <Row\n          title=\"Netflix originals\"\n          fetchUrl={requests.fetchNetflixOriginals}\n          isLargeRow={true}\n        />\n        <Row title=\"Trending now\" fetchUrl={requests.fetchTrending} />\n        <Row title=\"Top rated\" fetchUrl={requests.fetchTopRated} />\n        <Row title=\"Action movies\" fetchUrl={requests.fetchActionMovies} />\n        <Row title=\"Comedy movies\" fetchUrl={requests.fetchComedyMovies} />\n        <Row title=\"Horror movies\" fetchUrl={requests.fetchHorrorMovies} />\n        <Row title=\"Romance movies\" fetchUrl={requests.fetchRomanceMovies} />\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} /> */}\n        <Products/>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './commom/home.js';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    makeStyles,\n    withStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@material-ui/core';\nimport { Button } from 'react-bootstrap';\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport axios from 'axios';\nconst tableStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 500,\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    button: {\n        float: 'right',\n        marginRight: 50\n    }\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.white,\n        color: theme.palette.common.black,\n    },\n    body: {\n        fontSize: 18,\n    },\n}))(TableCell);\n\nconst Posts = () => {\n    const [posts, setPosts] = useState([]);\n    const history = useHistory();\n    const match = useRouteMatch();\n    const classes = tableStyles();\n    const routeChange = () => {\n        history.push(`${match.path}/add`);\n    }\n    const deletePost = async (post) => {\n        const params = {\n            postId: post.id,\n            createdAt: post.createdAt\n        }\n        const response = await axios({\n            method: 'POST',\n            url: 'https://ukwsvt85ug.execute-api.ap-northeast-1.amazonaws.com/api/Delete_Post',\n            data: JSON.stringify(params)\n        })\n\n        console.log(response);\n    }\n    useEffect(() => {\n        async function getALlPosts() {\n            const response = await axios.get('https://ukwsvt85ug.execute-api.ap-northeast-1.amazonaws.com/dev/Get_All_Post');\n            const data = response.data.data;\n            setPosts(data.Items);\n\n        }\n        getALlPosts();\n    }, []);\n    return (\n        <div className={classes.root}>\n            <h1>List Posts</h1>\n            <Button variant=\"primary\" style={{ float: 'right', marginRight: 20 }} onClick={routeChange}>\n                Add a new post\n            </Button>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell width={200} align=\"center\">Id</StyledTableCell>\n                            <StyledTableCell align=\"center\">Title</StyledTableCell>\n                            <StyledTableCell align=\"center\">Body</StyledTableCell>\n                            <StyledTableCell align=\"center\">UserId</StyledTableCell>\n                            <StyledTableCell align=\"center\">CreatedAt</StyledTableCell>\n                            <StyledTableCell align=\"center\">Action</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {posts.map((post) => (\n                            <TableRow key={post.id}>\n                                <StyledTableCell align=\"center\">{post.id}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{post.title}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{post.body}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{post.userId}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{post.createdAt}</StyledTableCell>\n                                <StyledTableCell align=\"center\">\n                                    <Button style={{ marginRight: 5 }} variant=\"info\"><i className=\"fa fa-edit\"></i>Edit</Button>\n                                    <Button onClick={() => deletePost(post)} variant=\"secondary\"><i className=\"fa fa-trash-alt\"></i>Delete</Button>\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default Posts;\n","import React from 'react'\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\nimport {\n    AppBar,\n    Typography,\n    Toolbar,\n    IconButton,\n    makeStyles\n} from '@material-ui/core';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nconst myStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    }\n}));\n\nconst Footer = ({ total }) => {\n    const classes = myStyles();\n    const history = useHistory();\n\n    const redirectToMyCart = () => {\n        history.push('/carts');\n    }\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        {/* <MenuIcon /> */}\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link to=\"/products\" style={{ marginRight: 20, color: 'white', textDecoration: 'none' }}>Products</Link>\n                        <Link to=\"/posts\" style={{ color: 'white', textDecoration: 'none' }} >List Posts</Link>\n                    </Typography>\n                    <Button color=\"inherit\" style={{ marginRight: 5 }} onClick={redirectToMyCart}>{total}<i className=\"fas fa-shopping-cart\"></i>My Cart</Button>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        total: state.total\n    }\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nInputField.propTypes = {\n    field: PropTypes.object.isRequired,\n    form: PropTypes.object.isRequired,\n\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    isDisable: PropTypes.bool\n}\n\nInputField.defaultProps = {\n    type: 'text',\n    label: '',\n    placeholder: '',\n    isDisable: false\n}\nexport default function InputField(props) {\n    var { field, type, label, placeholder, isDisable } = props; // formik alway send default 2 props are field and form\n    var { name, value, onChange, onBlur } = field;\n    return (\n        <Form.Group controlId=\"formBasicEmail\">\n            {label && <Form.Label>{label}</Form.Label>}\n            <Form.Control\n                type={type}\n                name={name}\n                value={value}\n                onChange={onChange}\n                onBlur={onBlur}\n                placeholder={placeholder}\n                disabled={isDisable} />\n        </Form.Group>\n    )\n}\n","import React from 'react'\nimport './Cart.css';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport url from './../../commom/baseURL.js';\nfunction MyCart({ addedCarts }) {\n    const itemList = addedCarts.map(item => {\n        return (\n            <div className=\"card\" key={item.productId}>\n                <div className=\"card-image\">\n                    <img src={`${url.BASE_URL_S3}${item.img}`} alt={item.name} />\n                    <span className=\"card-name\">{item.name}</span>\n                </div>\n                <div className=\"card-content\">\n                    <p>{item.description}</p>\n                    <p><b>Price: {item.price}$</b></p>\n                    <span><p>Amount: {item.count}</p></span>\n                </div>\n            </div>\n        )\n    })\n    return (\n        <Row>\n            <Col xs={4}>\n                <div className=\"list-cart\">\n                    <h3 className=\"center\">My list items</h3>\n                    <div className=\"cart\">\n                        {itemList}\n                    </div>\n                </div>\n            </Col>\n            <Col xs={8}>\n                <h1>Go to payment</h1>\n            </Col>\n        </Row>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        addedCarts: state.addedItems\n    }\n}\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCart);\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useDropzone } from 'react-dropzone';\nimport { Form } from 'react-bootstrap';\n// styles for previewing image\nconst thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n};\n\nconst thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n};\n\nconst img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n};\n\n// style drag drop area\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\nfunction Drag_Drop_Image(props) {\n    const [files, setFiles] = useState([]);\n    var { field, label } = props; // formik alway send default 2 props are field and form\n    var { value } = field;\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject,\n        acceptedFiles,\n        open\n    } = useDropzone({\n        accept: 'image/*',\n        // Disable click and keydown behavior\n        noClick: true,\n        noKeyboard: true,\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    });\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    src={file.preview}\n                    style={img}\n                    alt={file.name}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    for (let i = 0; i < acceptedFiles.length; i++) {\n        if (acceptedFiles[i] != null && !value.includes(acceptedFiles[i])) {\n            value.push(acceptedFiles[i]);\n        }\n    }\n    return (\n        <Form.Group controlId=\"formBasicEmail\">\n            {label && <Form.Label>{label}</Form.Label>}\n            <div {...getRootProps({ style })}>\n                <Form.Control\n                    {...getInputProps()}\n                />\n                <p>Drag 'n' drop some images here</p>\n                <button type=\"button\" onClick={open}>\n                    Open File Dialog\n                </button>\n            </div>\n            <aside style={thumbsContainer}>\n                {thumbs}\n            </aside>\n        </Form.Group>\n    )\n}\n\nexport default Drag_Drop_Image;\n","import React, { useState } from 'react'\nimport InputField from '../../commom/inputField.js';\nimport DragDropImage from '../../commom/drag_drop_image.js';\nimport {\n    Formik,\n    Form,\n    FastField\n} from 'formik';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nfunction CreateProduct() {\n    const [isRedirect, setIsRedirect] = useState(false)\n    const initialValues = {\n        name: '',\n        description: '',\n        price: 0,\n        imgs: []\n    }\n    const onSubmitForm = async (data) => {\n        var params = {\n            name: data.name,\n            description: data.description,\n            price: data.price,\n            imgs: data.imgs.map(file => file.name)\n        }\n        const response = await axios({\n            method: 'POST',\n            url: 'https://ukwsvt85ug.execute-api.ap-northeast-1.amazonaws.com/dev/Create_Product',\n            data: JSON.stringify(params)\n        });\n        const uploadInfo = await response.data.uploadInfo.body || null;\n        // Getting the url from response\n        const uploadUrl = uploadInfo.uploadURL;\n        console.log(uploadUrl)\n        const res = await axios({\n            method: 'PUT',\n            url: uploadUrl,\n            data: data.imgs[0],\n            headers: { \"Content-Type\": \"multipart/form-data\" }\n        })\n\n        if (res.status === 200) {\n            setIsRedirect(true)\n        }\n    }\n    const back = () => {\n        setIsRedirect(true);\n    }\n    // Render component with condition isRedirect\n    if (isRedirect) {\n        return (\n            <Redirect to=\"/products\" />\n        )\n    } else {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs={6}>\n                        <h1>Create a new product</h1>\n                        <Formik\n                            initialValues={initialValues}\n                            onSubmit={(values) => {\n                                onSubmitForm(values);\n                            }}\n                        >\n                            {formikProps => {\n                                // const { values, touched, errors } = formikProps;\n                                return (\n                                    <Form>\n                                        <FastField\n                                            name=\"name\"\n                                            component={InputField}\n                                            label=\"Name\"\n                                            placeholder=\"Enter name\"\n                                        />\n                                        <FastField\n                                            name=\"description\"\n                                            component={InputField}\n                                            label=\"Description\"\n                                            placeholder=\"Enter description\"\n                                        />\n                                        <FastField\n                                            type=\"number\"\n                                            name=\"price\"\n                                            component={InputField}\n                                            label=\"Price\"\n                                            placeholder=\"Enter price\"\n                                        />\n                                        <FastField\n                                            name=\"imgs\"\n                                            component={DragDropImage}\n                                            label=\"Image\"\n                                        />\n                                        <div style={{ margin: 20 }}>\n                                            <Button onClick={back} style={{ marginRight: 5 }} variant=\"warning\">Cancel</Button>\n                                            <Button type=\"submit\" variant=\"success\">Save</Button>\n                                        </div>\n                                    </Form>\n                                )\n                            }}\n                        </Formik>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\nexport default CreateProduct;","const initialState = {\n    addedItems: [],\n    total: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_TO_CART':\n            var addedItem = action.payload;\n            addedItem.count +=1;\n            var checkItem = state.addedItems.find(x => x.productId === addedItem.productId);\n            if (checkItem) {\n                checkItem.count++;\n                return {\n                    ...state,\n                    total: state.total += 1\n                }\n            } else {\n                var { addedItems } = state;\n                addedItems.push(addedItem);\n                return {\n                    ...state,\n                    addedItems: addedItems,\n                    total: state.total += 1\n                }\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Posts from './components/posts/posts.js';\nimport Footer from './commom/footer.js';\nimport CreatePost from './components/posts/createPost.js';\nimport MyCart from './components/cart/myCart.js';\nimport CreateProduct from './components/products/createProduct.js';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport reducer from './reducer.js';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nconst appStore = createStore(reducer, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={appStore}>\n    <BrowserRouter>\n      <Footer />\n      <Switch>\n        <Route exact path=\"/products\" component={App} />\n        <Route exact path=\"/posts\" component={Posts} />\n        <Route path=\"/posts/add\" component={CreatePost} />\n        <Route path=\"/carts\" component={MyCart} />\n        <Route path=\"/products/create\" component={CreateProduct} />\n        <Redirect from=\"/\" to=\"/products\" />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport InputField from '../../commom/inputField.js';\nimport {\n    Formik,\n    Form,\n    FastField\n} from 'formik';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nexport default function CreatePost(props) {\n    const [isRedirect, setIsRedirect] = useState(false)\n    const initialValues = {\n        title: '',\n        body: ''\n    }\n    const onSubmitForm = async (data) => {\n        var response = await axios({\n            method: 'POST',\n            url: 'https://ukwsvt85ug.execute-api.ap-northeast-1.amazonaws.com/api/posts',\n            data: JSON.stringify(data)\n        });\n        if (response.status === 200) {\n            setIsRedirect(true);\n        }\n    }\n    const back = () => {\n        setIsRedirect(true);\n    }\n\n    // Render component with condition isRedirect\n    if (isRedirect) {\n        return (\n            <Redirect to=\"/posts\" />\n        )\n    } else {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs={6}>\n                        <h1>Create a new post</h1>\n                        <Formik\n                            initialValues={initialValues}\n                            onSubmit={(values) => {\n                                onSubmitForm(values);\n                            }}\n                        >\n                            {formikProps => {\n                                // const { values, touched, errors } = formikProps;\n                                return (\n                                    <Form>\n                                        <FastField\n                                            name=\"title\"\n                                            component={InputField}\n                                            label=\"Title\"\n                                            placeholder=\"Enter title\"\n                                        />\n                                        <FastField\n                                            name=\"body\"\n                                            component={InputField}\n                                            label=\"Body\"\n                                            placeholder=\"Enter body\"\n                                        />\n                                        <Button onClick={back} style={{marginRight: 5}} variant=\"warning\">Cancel</Button>\n                                        <Button type=\"submit\" variant=\"success\">Save</Button>\n                                    </Form>\n                                )\n                            }}\n                        </Formik>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n"],"sourceRoot":""}